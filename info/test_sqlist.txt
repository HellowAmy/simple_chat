== 数据库操作 ==

格式化输出：
	.header on
	.mode column

打开数据库：
	./sqlite3 test_sql.db
	../third_party/sqlite3/sqlite3 test_wid.db 	(build测试)
	./../third_party/sqlite3/sqlite3
	/home/red/open/github/simple_chat/third_party/sqlite3/sqlite3
	
创建表：
	CREATE TABLE test_table (
	    id INTEGER PRIMARY KEY,
	    value TEXT
	);
	
删除表：
	DROP TABLE IF EXISTS test_table;
	
查看表结构：
	.tables			（查看所有表）
	.schema test_table	（查看某个表的具体数据结构）
	
插入数据：
	INSERT INTO test_table VALUES (1,'hellow');
	INSERT INTO test_table VALUES (2,'word');
	INSERT INTO test_table VALUES (3,'how');
	INSERT INTO test_table VALUES (4,'are');
	INSERT INTO test_table VALUES (5,'you');
	INSERT INTO test_table VALUES (6,'my');
	INSERT INTO test_table VALUES (7,'boy');

统计数据：
	SELECT COUNT(*) FROM test_table;

更新数据：
	UPDATE test_table SET value = 'hello';			（更新所有）
	UPDATE test_table SET value = 'hello' WHERE id = 101;	（指定条件）

查看数据：
	SELECT * FROM test_table				（查看所有）
	SELECT * FROM test_table WHERE id >=2 AND id <= 5; 	（条件查询）
	
删除数据：
	DELETE FROM test_table;					（删除所有）
	DELETE FROM test_table WHERE id >=2 AND id <= 5;	（条件删除）

退出数据库：
	.quit
	
== 数据库操作 ==



== 历史记录 ==
简介：
	用于客户端记录聊天历史，每个账号建一个数据库，每个好友建立一张表
		库名：history_X.db		
		表名：history_X 	
		
表结构：	
        CREATE TABLE IF NOT EXISTS history (
            send_time INTEGER PRIMARY KEY,
            feed_back INTEGER CHECK (feed_back >= send_time),
            non_read INTEGER CHECK (non_read >= 0 AND non_read <= 1),
            types INTEGER CHECK (types >= 0),
            object INTEGER CHECK (object >= 0 AND object <= 3),
            content TEXT
        );
== 历史记录 ==


== 账号管理 ==
简介：
	用于服务器管理账号信息，多表联合管理

表结构：
	ac_passwd：账号密码，存在的表结构主表，约束附加表数量	
	CREATE TABLE ac_passwd (
		    account INTEGER PRIMARY KEY CHECK (account >= 100000000 AND account <= 999999999),
		    passwd TEXT CHECK (LENGTH(passwd) >= 6 AND LENGTH(passwd) <= 18)
		);

	ac_friends：账号好友，ac_passwd表的附加表，记录每个账号的好友关系
	CREATE TABLE ac_friends (
		    account INTEGER ,
		    friends INTEGER ,
		    CHECK (account != friends),
		    FOREIGN KEY (account) REFERENCES ac_passwd (account),
		    FOREIGN KEY (friends) REFERENCES ac_passwd (account)
		);

	ac_info：账号信息，记录账号信息以及图像图片
	CREATE TABLE ac_info (
		    account INTEGER PRIMARY KEY,
		    phone INTEGER CHECK (phone >= 0) ,
		    age INTEGER CHECK (age >= 0 AND age <= 200) ,
		    sex INTEGER CHECK (sex >= 0 AND sex <= 3) ,
		    nickname TEXT,
		    location TEXT,
		    icon TEXT,
		    FOREIGN KEY (account) REFERENCES ac_passwd (account)
		);
== 账号管理 ==



============================================================================



ac_passwd
SELECT * FROM ac_friends;
SELECT * FROM ac_info;
SELECT * FROM ac_passwd;

CREATE TABLE chat_history (
    id INTEGER PRIMARY KEY,
    user TEXT,
    message TEXT,
    timestamp DATETIME
);
../data/head_icon/icon_default.png

UPDATE ac_info SET icon = 'icon_default.png';
UPDATE history SET non_read = 1 WHERE send_time = 12347;
UPDATE history SET content = 'abasd' WHERE send_time = 12347;

-- 向表格中插入一条记录
INSERT INTO chat_history (user, message, timestamp)
VALUES ('John', 'Hello!', DATETIME('now'));


INSERT INTO chat_history (user, message, timestamp)
VALUES ('John', 'Hello!', DATETIME('now'));

-- 查询表格中的数据
SELECT * FROM chat_history;





----- 测试 -----
UPDATE history SET non_read = 1 WHERE send_time = 12347;
UPDATE history SET content = 'abasd' WHERE send_time = 12347;

|:895023031 |:123456
|:895047172 |:123456
|:895051539 |:123456
|:895058270 |:123456
|:895066604 |:123456
|:895075270 |:123456
|:895079418 |:123456
|:895089004 |:123456
|:895095544 |:123456
|:895106418 |:123456
|:895111325 |:123456
|:895119256 |:123456
|:895120696 |:123456
|:895143193 |:123456
|:895149846 |:123456
|:895150027 |:123456
|:895151498 |:123456

SELECT * FROM history_123344556;

ac_passwd
SELECT * FROM ac_friends;
SELECT * FROM ac_info;
SELECT * FROM ac_passwd;

SELECT * FROM ac_passwd WHERE account = 999854739;

SELECT * FROM ac_passwd WHERE account = 895075270;

SELECT COUNT(*) FROM ac_passwd;
SELECT * FROM ac_passwd;
.schema ac_passwd
SELECT SUM(object) FROM history;
SELECT SUM(non_read) 
SELECT COUNT(*) FROM ac_passwd;
SELECT SUM(non_read) FROM history;
SELECT SUM(object) FROM history;
